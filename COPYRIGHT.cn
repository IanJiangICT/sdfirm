该软件包含了郑律（ZETALOG）在其职业生涯内开发的软件。这些源代码文件或许包含
了与某开源实现看起来有若干相似度的代码。但可以肯定的是，它们都经过“ZETALOG”
修改甚至完全重写，成为“ZETALOG”个人风格的代码。

作为在一个有很多离岸外包软件开发工作的国度中工作的工程师，“ZETALOG”必须在商
业公司之间跳槽。为了避免在该产业链中重复制造轮子（数据结构实现、操作系统概
念实现等）——这很重要因为“ZETALOG”理念上坚信软件有对于一组预定义的功能倾向于
收敛为唯一实现的特点且sdfirm试图成为该唯一实现——以保证“ZETALOG”能够在他的新
的职业角色中能提供被要求的效率，这些文件必须保有“ZETALOG”可在所有雇主中使用
它们的能力。换言之，“ZETALOG”必须说服他的新雇主这些文件可以任何它们期望的许
可证重新发布而不用担心前雇主宣称它们的版权。这些源代码文件因此一个称为
“ZETALOG”许可证的特殊许可证发布。

“ZETALOG”许可证基本表达为GPLv2，仅有一处例外。
1. 当该项目中的源代码为一与“ZETALOG”无任何业务往来的公司和个人使用并重用
   时，该项目及其源代码可被简单认为以GPLv2发布。
2. 当该项目中的源代码为一与“ZETALOG”有包含且不限于“雇佣ZETALOG”、“由ZETALOG
   发起”之类的业务关系，该项目及其源代码可被认为以一个特殊的“ZETALOG”条款发
   布。以下的章节描述“ZETALOG”条款。

“ZETALOG”并非法律人士，所以“ZETALOG”条款中的用词或许不足以清晰表达一个公司
或个人在将“ZETALOG”许可证软件导入它们的业务时时所需做出的考量。以下试图以简
洁的方式解释“ZETALOG”条款以打消雇主的顾虑。
1. 公司与个人能不必通知“ZETALOG”而以任何期望的许可证形式重新发布该项目及其
   源代码。然后，当该源码将以开源形式发布时，它必须被重新以“ZETALOG”许可证
   发布。
2. “ZETALOG”有权将一部分与该公司与个人所有的技术有关的源代码保留为开源形
   式以保证该项目能够展现其运行该技术的能力。这部分开源组件仅限于启动该项
   目（通常为一款SoC）必须的组件（时钟、电源、管脚、串口、定时器）或可在开
   源社区中找到开源形式的组件。
   须知该公司或个人总有权要求“ZETALOG”停止发布违反该条款的内容，且“ZETALOG”
   是该项目当前唯一一个有权利保持符合该条款组件为闭源而不违反该条款的贡献
   者。
因此“ZETALOG”条款是一个双赢条款：
1. 如果您希望无偿使用该软件，请雇佣“ZETALOG”，这也意味着您购买了“ZETALOG”的
   所有职业积累。
2. 当您停止雇佣“ZETALOG”，请勿以“ZETALOG”或许将该项目中展现的相同职业技能用
   于其他雇主为意。这些技能可被认为是“ZETALOG”用于完全满足其系统软件工程师
   角色必备的技能。
以上可被看作是在“ZETALOG”雇主和“ZETALOG”之间的公平雇佣条款。若您并未购买整
个“ZETALOG”职业生涯，您不应当阻止“ZETALOG”使用其职业技能谋生。
3. 如果您希望无偿使用该软件，请将一部分最低启动需求开源为该软件做出贡献。
4. 启动以外的部分是早就在社区中周知的部分，因此您无任何无潜在损失风险。相
   反，您将免费收获一个额外的开源解决方案且自动成为该项目的投资者。
以上可被看作是sdfirm和其使用者之间的公平使用条款。若您希望导入sdfirm，请勿
掩盖sdfirm已经有新用户的事实。并且让sdfirm扩大其影响力，反过来您也可以从其
他贡献者的贡献中获益。
实际上，“ZETALOG”可使用后一条款保护其个人在公司内的知识产权。当被雇佣时，
“ZETALOG”可能并非某工程任务的责任人，他的知识有可能被责任人盗用。而保持最
低开源需求，则毫无疑问“ZETALOG”对他在该任务中所做出的工程贡献享有著作权。
因此该条款对“ZETALOG”雇主无任何利益损害，但却有助于“ZETALOG”把握其职业机
会。
