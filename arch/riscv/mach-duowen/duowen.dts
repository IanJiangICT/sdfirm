#include <target/arch.h>
#include <dt-bindings/clock/sbi-clock-duowen.h>

/dts-v1/;

/ {
	#address-cells = <0x2>;
	#size-cells = <0x2>;
	compatible = "riscv-smarco";
	model = "riscv-smarco,duowen";

	chosen {
#ifdef CONFIG_DUOWEN_UART_DTS_CON
		bootargs = [00];
		stdout-path = "/uart@ff63000000";
#else
		bootargs = "console=hvc0 earlycon=sbi";
#endif
	};

#ifdef CONFIG_DUOWEN_UART_DTS
	uart@ff63000000 {
		interrupts = <0x54>;
		interrupt-parent = <&plic>;
#ifdef CONFIG_DUOWEN_FPGA
		clock-frequency = <0x989680>;
#endif
#ifdef CONFIG_DUOWEN_ZEBU
		clock-frequency = <0x7735940>;
#endif
#ifdef CONFIG_DUOWEN_ASIC
		clock-frequency = <0x7735940>;
#endif
		reg = <0xff 0x63000000 0x0 0x100>;
		reg-io-width = <0x4>;
		compatible = "snps,dw-apb-uart";
	};
#endif

	poweroff {
		value = <0x5555>;
		offset = <0x0>;
		regmap = <0x4>;
		compatible = "syscsr-poweroff";
	};

	reboot {
		value = <0x7777>;
		offset = <0x0>;
		regmap = <0x4>;
		compatible = "syscsr-reboot";
	};

	cpus {
		#address-cells = <0x1>;
		#size-cells = <0x0>;
		timebase-frequency = <0x989680>;

#ifdef CONFIG_SMP
#ifdef CONFIG_DUOWEN_APC_3
		cpu-map {
			cluster0 {
				core0 {
					cpu = <&cpu0>;
				};
			};
			cluster1 {
				core0 {
					cpu = <&cpu1>;
				};
			};
			cluster2 {
				core0 {
					cpu = <&cpu2>;
				};
			};
		};
		cpu0: cpu@0 {
			device_type = "cpu";
			reg = <0x0>;
			status = "okay";
			compatible = "riscv";
			riscv,isa = "rv64imafdsu";
			mmu-type = "riscv,sv48";
			cpu0_intc: interrupt-controller {
				#interrupt-cells = <0x1>;
				interrupt-controller;
				compatible = "riscv,cpu-intc";
			};
		};
		cpu1: cpu@1 {
			device_type = "cpu";
			reg = <0x1>;
			status = "okay";
			compatible = "riscv";
			riscv,isa = "rv64imafdsu";
			mmu-type = "riscv,sv48";
			cpu1_intc: interrupt-controller {
				#interrupt-cells = <0x1>;
				interrupt-controller;
				compatible = "riscv,cpu-intc";
			};
		};
		cpu2: cpu@2 {
			device_type = "cpu";
			reg = <0x2>;
			status = "okay";
			compatible = "riscv";
			riscv,isa = "rv64imafdsu";
			mmu-type = "riscv,sv48";
			cpu2_intc: interrupt-controller {
				#interrupt-cells = <0x1>;
				interrupt-controller;
				compatible = "riscv,cpu-intc";
			};
		};
#else /* CONFIG_DUOWEN_APC_3 */
#ifdef CONFIG_DUOWEN_APC_4
		cpu-map {
			cluster0 {
				core0 {
					cpu = <&cpu0>;
				};
			};
			cluster1 {
				core0 {
					cpu = <&cpu1>;
				};
			};
			cluster2 {
				core0 {
					cpu = <&cpu2>;
				};
			};
			cluster3 {
				core0 {
					cpu = <&cpu3>;
				};
			};
		};
		cpu0: cpu@0 {
			device_type = "cpu";
			reg = <0x0>;
			status = "okay";
			compatible = "riscv";
			riscv,isa = "rv64imafdsu";
			mmu-type = "riscv,sv48";
			cpu0_intc: interrupt-controller {
				#interrupt-cells = <0x1>;
				interrupt-controller;
				compatible = "riscv,cpu-intc";
			};
		};
		cpu1: cpu@1 {
			device_type = "cpu";
			reg = <0x1>;
			status = "okay";
			compatible = "riscv";
			riscv,isa = "rv64imafdsu";
			mmu-type = "riscv,sv48";
			cpu1_intc: interrupt-controller {
				#interrupt-cells = <0x1>;
				interrupt-controller;
				compatible = "riscv,cpu-intc";
			};
		};
		cpu2: cpu@2 {
			device_type = "cpu";
			reg = <0x2>;
			status = "okay";
			compatible = "riscv";
			riscv,isa = "rv64imafdsu";
			mmu-type = "riscv,sv48";
			cpu2_intc: interrupt-controller {
				#interrupt-cells = <0x1>;
				interrupt-controller;
				compatible = "riscv,cpu-intc";
			};
		};
		cpu3: cpu@3 {
			device_type = "cpu";
			reg = <0x3>;
			status = "okay";
			compatible = "riscv";
			riscv,isa = "rv64imafdsu";
			mmu-type = "riscv,sv48";
			cpu3_intc: interrupt-controller {
				#interrupt-cells = <0x1>;
				interrupt-controller;
				compatible = "riscv,cpu-intc";
			};
		};
#else /* CONFIG_DUOWEN_APC_4 */
		cpu-map {
			cluster0 {
				core0 {
					cpu = <&cpu0>;
				};
				core1 {
					cpu = <&cpu1>;
				};
				core2 {
					cpu = <&cpu2>;
				};
				core3 {
					cpu = <&cpu3>;
				};
			};
			cluster1 {
				core0 {
					cpu = <&cpu4>;
				};
				core1 {
					cpu = <&cpu5>;
				};
				core2 {
					cpu = <&cpu6>;
				};
				core3 {
					cpu = <&cpu7>;
				};
			};
			cluster2 {
				core0 {
					cpu = <&cpu8>;
				};
				core1 {
					cpu = <&cpu9>;
				};
				core2 {
					cpu = <&cpu10>;
				};
				core3 {
					cpu = <&cpu11>;
				};
			};
			cluster3 {
				core0 {
					cpu = <&cpu12>;
				};
				core1 {
					cpu = <&cpu13>;
				};
				core2 {
					cpu = <&cpu14>;
				};
				core3 {
					cpu = <&cpu15>;
				};
			};
		};
		cpu0: cpu@0 {
			device_type = "cpu";
			reg = <0xf>;
			status = "okay";
			compatible = "riscv";
			riscv,isa = "rv64imafdsu";
			mmu-type = "riscv,sv48";
			cpu0_intc: interrupt-controller {
				#interrupt-cells = <0x1>;
				interrupt-controller;
				compatible = "riscv,cpu-intc";
			};
		};
		cpu1: cpu@1 {
			device_type = "cpu";
			reg = <0xe>;
			status = "okay";
			compatible = "riscv";
			riscv,isa = "rv64imafdsu";
			mmu-type = "riscv,sv48";
			cpu1_intc: interrupt-controller {
				#interrupt-cells = <0x1>;
				interrupt-controller;
				compatible = "riscv,cpu-intc";
			};
		};
		cpu2: cpu@2 {
			device_type = "cpu";
			reg = <0xd>;
			status = "okay";
			compatible = "riscv";
			riscv,isa = "rv64imafdsu";
			mmu-type = "riscv,sv48";
			cpu2_intc: interrupt-controller {
				#interrupt-cells = <0x1>;
				interrupt-controller;
				compatible = "riscv,cpu-intc";
			};
		};
		cpu3: cpu@3 {
			device_type = "cpu";
			reg = <0xc>;
			status = "okay";
			compatible = "riscv";
			riscv,isa = "rv64imafdsu";
			mmu-type = "riscv,sv48";
			cpu3_intc: interrupt-controller {
				#interrupt-cells = <0x1>;
				interrupt-controller;
				compatible = "riscv,cpu-intc";
			};
		};
		cpu4: cpu@4 {
			device_type = "cpu";
			reg = <0xb>;
			status = "okay";
			compatible = "riscv";
			riscv,isa = "rv64imafdsu";
			mmu-type = "riscv,sv48";
			cpu4_intc: interrupt-controller {
				#interrupt-cells = <0x1>;
				interrupt-controller;
				compatible = "riscv,cpu-intc";
			};
		};
		cpu5: cpu@5 {
			device_type = "cpu";
			reg = <0xa>;
			status = "okay";
			compatible = "riscv";
			riscv,isa = "rv64imafdsu";
			mmu-type = "riscv,sv48";
			cpu5_intc: interrupt-controller {
				#interrupt-cells = <0x1>;
				interrupt-controller;
				compatible = "riscv,cpu-intc";
			};
		};
		cpu6: cpu@6 {
			device_type = "cpu";
			reg = <0x9>;
			status = "okay";
			compatible = "riscv";
			riscv,isa = "rv64imafdsu";
			mmu-type = "riscv,sv48";
			cpu6_intc: interrupt-controller {
				#interrupt-cells = <0x1>;
				interrupt-controller;
				compatible = "riscv,cpu-intc";
			};
		};
		cpu7: cpu@7 {
			device_type = "cpu";
			reg = <0x8>;
			status = "okay";
			compatible = "riscv";
			riscv,isa = "rv64imafdsu";
			mmu-type = "riscv,sv48";
			cpu7_intc: interrupt-controller {
				#interrupt-cells = <0x1>;
				interrupt-controller;
				compatible = "riscv,cpu-intc";
			};
		};
		cpu8: cpu@8 {
			device_type = "cpu";
			reg = <0x7>;
			status = "okay";
			compatible = "riscv";
			riscv,isa = "rv64imafdsu";
			mmu-type = "riscv,sv48";
			cpu8_intc: interrupt-controller {
				#interrupt-cells = <0x1>;
				interrupt-controller;
				compatible = "riscv,cpu-intc";
			};
		};
		cpu9: cpu@9 {
			device_type = "cpu";
			reg = <0x6>;
			status = "okay";
			compatible = "riscv";
			riscv,isa = "rv64imafdsu";
			mmu-type = "riscv,sv48";
			cpu9_intc: interrupt-controller {
				#interrupt-cells = <0x1>;
				interrupt-controller;
				compatible = "riscv,cpu-intc";
			};
		};
		cpu10: cpu@10 {
			device_type = "cpu";
			reg = <0x5>;
			status = "okay";
			compatible = "riscv";
			riscv,isa = "rv64imafdsu";
			mmu-type = "riscv,sv48";
			cpu10_intc: interrupt-controller {
				#interrupt-cells = <0x1>;
				interrupt-controller;
				compatible = "riscv,cpu-intc";
			};
		};
		cpu11: cpu@11 {
			device_type = "cpu";
			reg = <0x4>;
			status = "okay";
			compatible = "riscv";
			riscv,isa = "rv64imafdsu";
			mmu-type = "riscv,sv48";
			cpu11_intc: interrupt-controller {
				#interrupt-cells = <0x1>;
				interrupt-controller;
				compatible = "riscv,cpu-intc";
			};
		};
		cpu12: cpu@12 {
			device_type = "cpu";
			reg = <0x3>;
			status = "okay";
			compatible = "riscv";
			riscv,isa = "rv64imafdsu";
			mmu-type = "riscv,sv48";
			cpu12_intc: interrupt-controller {
				#interrupt-cells = <0x1>;
				interrupt-controller;
				compatible = "riscv,cpu-intc";
			};
		};
		cpu13: cpu@13 {
			device_type = "cpu";
			reg = <0x2>;
			status = "okay";
			compatible = "riscv";
			riscv,isa = "rv64imafdsu";
			mmu-type = "riscv,sv48";
			cpu13_intc: interrupt-controller {
				#interrupt-cells = <0x1>;
				interrupt-controller;
				compatible = "riscv,cpu-intc";
			};
		};
		cpu14: cpu@14 {
			device_type = "cpu";
			reg = <0x1>;
			status = "okay";
			compatible = "riscv";
			riscv,isa = "rv64imafdsu";
			mmu-type = "riscv,sv48";
			cpu14_intc: interrupt-controller {
				#interrupt-cells = <0x1>;
				interrupt-controller;
				compatible = "riscv,cpu-intc";
			};
		};
		cpu15: cpu@15 {
			device_type = "cpu";
			reg = <0x0>;
			status = "okay";
			compatible = "riscv";
			riscv,isa = "rv64imafdsu";
			mmu-type = "riscv,sv48";
			cpu15_intc: interrupt-controller {
				#interrupt-cells = <0x1>;
				interrupt-controller;
				compatible = "riscv,cpu-intc";
			};
		};
#endif /* CONFIG_DUOWEN_APC_4 */
#endif /* CONFIG_DUOWEN_APC_3 */
#else /* CONFIG_SMP */
		cpu-map {
			cluster0 {
				core0 {
					cpu = <&cpu0>;
				};
			};
		};
		cpu0: cpu@0 {
			device_type = "cpu";
			reg = <0x0>;
			status = "okay";
			compatible = "riscv";
			riscv,isa = "rv64imafdsu";
			mmu-type = "riscv,sv48";
			cpu0_intc: interrupt-controller {
				#interrupt-cells = <0x1>;
				interrupt-controller;
				compatible = "riscv,cpu-intc";
			};
		};

#endif /* CONFIG_SMP */
	};

	memory@0 {
		device_type = "memory";
#ifdef CONFIG_DUOWEN_DDR_32M
		reg = <0x0 0x0000000000 0x0 0x02000000>;
#endif
#ifdef CONFIG_DUOWEN_DDR_64M
		reg = <0x0 0x0000000000 0x0 0x04000000>;
#endif
#ifdef CONFIG_DUOWEN_DDR_128M
		reg = <0x0 0x0000000000 0x0 0x08000000>;
#endif
#ifdef CONFIG_DUOWEN_DDR_256M
		reg = <0x0 0x0000000000 0x0 0x10000000>;
#endif
#ifdef CONFIG_DUOWEN_DDR_512M
		reg = <0x0 0x0000000000 0x0 0x20000000>;
#endif
#ifdef CONFIG_DUOWEN_DDR_1G
		reg = <0x0 0x0000000000 0x0 0x40000000>;
#endif
#ifdef CONFIG_DUOWEN_DDR_2G
		reg = <0x0 0x0000000000 0x0 0x80000000>;
#endif
#ifdef CONFIG_DUOWEN_DDR_4G
		reg = <0x0 0x0000000000 0x1 0x00000000>;
#endif
#ifdef CONFIG_DUOWEN_DDR_8G
		reg = <0x0 0x0000000000 0x2 0x00000000>;
#endif
#ifdef CONFIG_DUOWEN_DDR_16G
		reg = <0x0 0x0000000000 0x4 0x00000000>;
#endif
#ifdef CONFIG_DUOWEN_DDR_32G
		reg = <0x0 0x0000000000 0x8 0x00000000>;
#endif
#ifdef CONFIG_DUOWEN_DDR_64G
		reg = <0x0 0x0000000000 0x10 0x00000000>;
#endif
#ifdef CONFIG_DUOWEN_DDR_128G
		reg = <0x0 0x0000000000 0x20 0x00000000>;
#endif
#ifdef CONFIG_DUOWEN_DDR_256G
		reg = <0x0 0x0000000000 0x40 0x00000000>;
#endif
#ifdef CONFIG_DUOWEN_DDR_512G
		reg = <0x0 0x0000000000 0x80 0x00000000>;
#endif
	};

	soc {
		#address-cells = <0x2>;
		#size-cells = <0x2>;
		compatible = "simple-bus";
		ranges;

		plic: interrupt-controller@ff70000000 {
			riscv,ndev = <0xf0>;
			reg = <0xff 0x70000000 0x0 0x4000000>;
			interrupts-extended = <
#ifdef CONFIG_SMP
#ifdef CONFIG_DUOWEN_APC_3
				&cpu0_intc 0xb &cpu1_intc 0xb
				&cpu2_intc 0xb &cpu0_intc 0x9
				&cpu1_intc 0x9 &cpu2_intc 0x9
#else /* CONFIG_DUOWEN_APC_3 */
#ifdef CONFIG_DUOWEN_APC_4
				&cpu0_intc 0xb &cpu1_intc 0xb
				&cpu2_intc 0xb &cpu3_intc 0xb
				&cpu0_intc 0x9 &cpu1_intc 0x9
				&cpu2_intc 0x9 &cpu3_intc 0x9
#else /* CONFIG_DUOWEN_APC_4 */
				&cpu0_intc  0xb &cpu1_intc  0xb
				&cpu2_intc  0xb &cpu3_intc  0xb
				&cpu4_intc  0xb &cpu5_intc  0xb
				&cpu6_intc  0xb &cpu7_intc  0xb
				&cpu8_intc  0xb &cpu9_intc  0xb
				&cpu10_intc 0xb &cpu11_intc 0xb
				&cpu12_intc 0xb &cpu13_intc 0xb
				&cpu14_intc 0xb &cpu15_intc 0xb
				&cpu0_intc  0x9 &cpu1_intc  0x9
				&cpu2_intc  0x9 &cpu3_intc  0x9
				&cpu4_intc  0x9 &cpu5_intc  0x9
				&cpu6_intc  0x9 &cpu7_intc  0x9
				&cpu8_intc  0x9 &cpu9_intc  0x9
				&cpu10_intc 0x9 &cpu11_intc 0x9
				&cpu12_intc 0x9 &cpu13_intc 0x9
				&cpu14_intc 0x9 &cpu15_intc 0x9
#endif /* CONFIG_DUOWEN_APC_4 */
#endif /* CONFIG_DUOWEN_APC_3 */
#else /* CONFIG_SMP */
				&cpu0_intc 0xb &cpu0_intc 0x9
#endif /* CONFIG_SMP */
			>;
			interrupt-controller;
			compatible = "riscv,plic0";
			#interrupt-cells = <0x1>;
			#address-cells = <0x0>;
		};

		clint@ff010f0000 {
			interrupts-extended = <
#ifdef CONFIG_SMP
#ifdef CONFIG_DUOWEN_APC_3
				&cpu0_intc 3 &cpu0_intc 7
				&cpu1_intc 3 &cpu1_intc 7
				&cpu2_intc 3 &cpu2_intc 7
#else /* CONFIG_DUOWEN_APC_3 */
#ifdef CONFIG_DUOWEN_APC_4
				&cpu0_intc 3 &cpu0_intc 7
				&cpu1_intc 3 &cpu1_intc 7
				&cpu2_intc 3 &cpu2_intc 7
				&cpu3_intc 3 &cpu3_intc 7
#else /* CONFIG_DUOWEN_APC_4 */
				&cpu0_intc  3 &cpu0_intc  7
				&cpu1_intc  3 &cpu1_intc  7
				&cpu2_intc  3 &cpu2_intc  7
				&cpu3_intc  3 &cpu3_intc  7
				&cpu4_intc  3 &cpu4_intc  7
				&cpu5_intc  3 &cpu5_intc  7
				&cpu6_intc  3 &cpu6_intc  7
				&cpu7_intc  3 &cpu7_intc  7
				&cpu8_intc  3 &cpu8_intc  7
				&cpu9_intc  3 &cpu9_intc  7
				&cpu10_intc 3 &cpu10_intc 7
				&cpu11_intc 3 &cpu11_intc 7
				&cpu12_intc 3 &cpu12_intc 7
				&cpu13_intc 3 &cpu13_intc 7
				&cpu14_intc 3 &cpu14_intc 7
				&cpu15_intc 3 &cpu15_intc 7
#endif /* CONFIG_DUOWEN_APC_4 */
#endif /* CONFIG_DUOWEN_APC_3 */
#else /* CONFIG_SMP */
				&cpu0_intc 3 &cpu0_intc 7
#endif /* CONFIG_SMP */
			>;
			reg = <0xff 0x10f0000 0x0 0x10000>;
			compatible = "riscv,clint0";
		};


		crcntl: crcntl-clock@ff60000000 {
			compatible = "smarco,duowen-crcntl";
			reg = <0xff 0x60000000 0x0 0x1000>;
			#clock-cells = <1>;
		};

#ifdef CONFIG_DUOWEN_ETH
		stmmac_axi_setup: stmmac-axi-config {
			snps,wr_osr_lmt = <0x3f>;
			snps,rd_osr_lmt = <0x3f>;
			snps,blen = <0 0 0 32 16 8 4>;
		};
		mtl_rx_setup: rx-queues-config {
			snps,rx-queues-to-use = <1>;
			snps,rx-sched-sp;
			queue0 {
				snps,dcb-algorithm;
				snps,map-to-dma-channel = <0x0>;
				snps,priority = <0x0>;
			};
		};
		mtl_tx_setup: tx-queues-config {
			snps,tx-queues-to-use = <2>;
			snps,tx-sched-wrr;
			queue0 {
				snps,weight = <0x10>;
				snps,dcb-algorithm;
				snps,priority = <0x0>;
			};
			queue1 {
				snps,avb-algorithm;
				snps,send_slope = <0x1000>;
				snps,idle_slope = <0x1000>;
				snps,high_credit = <0x3e800>;
				snps,low_credit = <0xffc18000>;
				snps,priority = <0x1>;
			};
		};
		xgmac0: ethernet@ff6a000000 {
			compatible = "snps,dwxgmac-2.20", "snps,dwxgmac";
			reg = <0xff 0x6a000000 0x0 0x100000>;
			interrupt-parent = <&plic>;
			interrupts = <195 194 193>;
			interrupt-names = "macirq", "eth_wake_irq", "eth_lpi";
			mac-address = [c69ded9a297c];
			max-frame-size = <3800>;
			phy-mode = "xgmii";
			snps,multicast-filter-bins = <256>;
			snps,perfect-filter-entries = <128>;
			rx-fifo-depth = <16384>;
			tx-fifo-depth = <16384>;
			clocks = <&crcntl sysfab_clk>;
			clock-names = "stmmaceth";
			snps,axi-config = <&stmmac_axi_setup>;
			snps,mtl-rx-config = <&mtl_rx_setup>;
			snps,mtl-tx-config = <&mtl_tx_setup>;
			/* MDIO is used for external phy configuration.
			 * The internal phy uses apb slave interface.
			 * Default to the internal phy.
			 */
			mdio0 {
				#address-cells = <1>;
				#size-cells = <0>;
				compatible = "snps,dwmac-mdio";
				ethernet-phy@0 {
					reg = <0>;
				};
			};
		};
#endif /* CONFIG_DUOWEN_ETH */

		/* DMA SMMU */
		dma_smmu: iommu@ff08000000 {
			compatible = "smarco,rvsmmu";
			reg = <0xff 0x8000000 0x0 0x20000>;
			interrupt-parent = <&plic>;
			interrupts = <83>;
			interrupt-names = "combined";
			dma_coherent;
			#iommu-cells = <1>;
		};

		/* PCIe SMMU */
		pcie_smmu: iommu@ff08400000 {
			compatible = "smarco,rvsmmu";
			reg = <0xff 0x8400000 0x0 0x20000>;
			interrupt-parent = <&plic>;
			interrupts = <80>;
			interrupt-names = "combined";
			dma_coherent;
			#iommu-cells = <1>;
		};
	};
};
